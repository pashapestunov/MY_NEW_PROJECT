"""Чтобы начать работу с файлом, его нужно открыть с помощью функции open().Функции open() нужно передать два аргумента:
● Путь к файлу
● Режим доступа к файлу"""

"""
r - файл открывается для чтения. Если файл не найден, генерируется исключение
w - файл открывается для записи. Если файл не найден, он создаётся. Если файл найден, его содержимое будет стёрто
a - файл открывается для дозаписи в его конец. Если файл не найден, он создаётся. Если файл найден, новые
данные записываются в его конец
rb - бинарный файл открывается для чтения
wb - бинарный файл открывается для записи
x - файл открывается для записи только если файла не существует, иначе - исключение
t - файл открывается в текстовом режиме (значение по умолчанию)
r+ - файл открывается для чтения и записи
w+ - файл открывается для чтения и записи, если файл не найден – он создаётся
"""

"""Закрытие файла осуществляется с помощью метода close(). Вызов данного метода освободит все связанные с
файлом занимаемые ресурсы."""

"""При работе с файлами можно столкнуться с различными исключениями: нет доступа к файлу, некорректная обработка
содержимого файла и т.д. В этом случае программа прекратит своё выполнение на моменте возникновения исключения, так
и не дойдя до закрытия файла. Для того, чтобы избежать подобных ситуаций, следует использовать контекстный
менеджер with при работе с файлами. При использовании оператора with не нужно закрывать файл вручную вызовом
метода close(), with автоматически закроет файл сразу после того, как мы закончим работу над этим файлом."""

"""Прочитать содержимое файла можно таким способом:"""

with open('some_text_file.txt.py', 'r') as some_text:
    data = some_text.read()
print(data)

"""Метод read() считывает всё содержимое файла. Если нам нужно считать только определённое количество символов из
файла, методу read() нужно передать аргумент – число, которое указывает, сколько конкретно символов нужно
прочитать."""

with open('some_text_file.txt.py', 'r') as some_text:
    data = some_text.read(5)
print(data)

"""А чтобы получить список всех строк файла, используют метод readlines()"""

with open('some_text_file.txt.py', 'r') as some_text:
    read_lines = some_text.readlines()
print(read_lines)

"""Для того, чтобы записать какие-либо данные в файл, нужно открыть его с помощью конструкции with ... as, но уже
указать режим доступа к файлу “w” (write)."""

data_some = ("\n\'Combo line\'")

with open('some_text_file.txt.py', 'a') as plus_text:  # я использовал 'а' вместо 'w', т.к. хотел дозаписать
    plus_text.write(data_some)

"""В файл можно записывать не только однострочную информацию, записать в файл строки из списка строк можно так:"""

some_data = ["\'First line\'", "\'Second line\'"]

with open('some_text_file.txt.py', 'w') as text_plus:
    text_plus.writelines(line + "\n" for line in some_data)

